;; Object linear_model/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "linear_model/"
  :tables (list 
   (semanticdb-table "logistic.py"
    :major-mode 'python-mode
    :tags 
        '( ("numpy" include nil nil [1 19])
            ("LinearClassifierMixin" include nil nil [32 60])
            ("SelectorMixin" include nil nil [101 121])
            ("BaseLibLinear" include nil nil [138 158])
            ("LogisticRegression" type
               (:superclasses ("BaseLibLinear" "LinearClassifierMixin" "SelectorMixin")
                :members 
                  ( (""""Logistic Regression (aka logit, MaxEnt) classifier.

    In the multiclass case, the training algorithm uses a one-vs.-all (OvA)
    scheme, rather than the "true" multinomial LR.

    This class implements L1 and L2 regularized logistic regression using the
    `liblinear` library. It can handle both dense and sparse input. Use
    C-ordered arrays or CSR matrices containing 64-bit floats for optimal
    performance; any other input format will be converted (and copied).

    Parameters
    ----------
    penalty : string, 'l1' or 'l2'
        Used to specify the norm used in the penalization.

    dual : boolean
        Dual or primal formulation. Dual formulation is only
        implemented for l2 penalty. Prefer dual=False when
        n_samples > n_features.

    C : float, optional (default=1.0)
        Specifies the strength of the regularization. The smaller it is
        the bigger is the regularization.

    fit_intercept : bool, default: True
        Specifies if a constant (a.k.a. bias or intercept) should be
        added the decision function.

    intercept_scaling : float, default: 1
        when self.fit_intercept is True, instance vector x becomes
        [x, self.intercept_scaling],
        i.e. a "synthetic" feature with constant value equals to
        intercept_scaling is appended to the instance vector.
        The intercept becomes intercept_scaling * synthetic feature weight
        Note! the synthetic feature weight is subject to l1/l2 regularization
        as all other features.
        To lessen the effect of regularization on synthetic feature weight
        (and therefore on the intercept) intercept_scaling has to be increased

    class_weight : {dict, 'auto'}, optional
        Set the parameter C of class i to class_weight[i]*C for
        SVC. If not given, all classes are supposed to have
        weight one. The 'auto' mode uses the values of y to
        automatically adjust weights inversely proportional to
        class frequencies.

    tol: float, optional
        Tolerance for stopping criteria.

    Attributes
    ----------
    `coef_` : array, shape = [n_classes-1, n_features]
        Coefficient of the features in the decision function.

        `coef_` is readonly property derived from `raw_coef_` that \
        follows the internal memory layout of liblinear.

    `intercept_` : array, shape = [n_classes-1]
        Intercept (a.k.a. bias) added to the decision function.
        It is available only when parameter intercept is set to True.

    See also
    --------
    LinearSVC

    Notes
    -----
    The underlying C implementation uses a random number generator to
    select features when fitting the model. It is thus not uncommon,
    to have slightly different results for the same input data. If
    that happens, try with a smaller tol parameter.

    References:

    LIBLINEAR -- A Library for Large Linear Classification
        http://www.csie.ntu.edu.tw/~cjlin/liblinear/

    Hsiang-Fu Yu, Fang-Lan Huang, Chih-Jen Lin (2011). Dual coordinate descent
        methods for logistic regression and maximum entropy models.
        Machine Learning 85(1-2):41-75.
        http://www.csie.ntu.edu.tw/~cjlin/papers/maxent_dual.pdf
    """" code nil (reparse-symbol indented_block_body) [244 3487])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [3506 3510])
                        ("penalty" variable nil (reparse-symbol function_parameters) [3512 3519])
                        ("dual" variable nil (reparse-symbol function_parameters) [3526 3530])
                        ("tol" variable nil (reparse-symbol function_parameters) [3538 3541])
                        ("C" variable nil (reparse-symbol function_parameters) [3548 3549])
                        ("fit_intercept" variable nil (reparse-symbol function_parameters) [3572 3585])
                        ("intercept_scaling" variable nil (reparse-symbol function_parameters) [3592 3609])
                        ("class_weight" variable nil (reparse-symbol function_parameters) [3613 3625])
                        ("random_state" variable nil (reparse-symbol function_parameters) [3649 3661]))                      ) (reparse-symbol indented_block_body) [3493 3921])
                    ("predict_proba" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [3944 3948])
                        ("X" variable nil (reparse-symbol function_parameters) [3950 3951]))                      ) (reparse-symbol indented_block_body) [3926 4878])
                    ("predict_log_proba" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [4905 4909])
                        ("X" variable nil (reparse-symbol function_parameters) [4911 4912]))                      ) (reparse-symbol indented_block_body) [4883 5558]))                  
                :type "class")
                nil [161 5558]))          
    :file "logistic.py"
    :pointmax 5444
    :fsize 5443
    :lastmodtime '(20733 45722)
    :unmatched-syntax 'nil
    )
   )
  :file "!Library!Python!2.7!site-packages!sklearn!linear_model!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
